<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Graduate extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Graduate_model');
    } 

    /*
     * Listing of graduates
     */
    function index()
    {
        $data['graduates'] = $this->Graduate_model->get_all_graduates();
        
        $data['_view'] = 'graduate/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new graduate
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('name','Name','required|max_length[255]');
		$this->form_validation->set_rules('email','Email','required|max_length[255]|valid_email');
		$this->form_validation->set_rules('age','Age','required|integer');
		$this->form_validation->set_rules('message','Message','required|max_length[255]');
		$this->form_validation->set_rules('graduated_on','Graduated On','required');
		$this->form_validation->set_rules('license_no','License No','required|integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'name' => $this->input->post('name'),
				'email' => $this->input->post('email'),
				'age' => $this->input->post('age'),
				'message' => $this->input->post('message'),
				'added' => $this->input->post('added'),
				'graduated_on' => $this->input->post('graduated_on'),
				'license_no' => $this->input->post('license_no'),
            );
            
            $graduate_id = $this->Graduate_model->add_graduate($params);
            redirect('graduate/index');
        }
        else
        {            
            $data['_view'] = 'graduate/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a graduate
     */
    function edit($id)
    {   
        // check if the graduate exists before trying to edit it
        $data['graduate'] = $this->Graduate_model->get_graduate($id);
        
        if(isset($data['graduate']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('name','Name','required|max_length[255]');
			$this->form_validation->set_rules('email','Email','required|max_length[255]|valid_email');
			$this->form_validation->set_rules('age','Age','required|integer');
			$this->form_validation->set_rules('message','Message','required|max_length[255]');
			$this->form_validation->set_rules('graduated_on','Graduated On','required');
			$this->form_validation->set_rules('license_no','License No','required|integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'name' => $this->input->post('name'),
					'email' => $this->input->post('email'),
					'age' => $this->input->post('age'),
					'message' => $this->input->post('message'),
					'added' => $this->input->post('added'),
					'graduated_on' => $this->input->post('graduated_on'),
					'license_no' => $this->input->post('license_no'),
                );

                $this->Graduate_model->update_graduate($id,$params);            
                redirect('graduate/index');
            }
            else
            {
                $data['_view'] = 'graduate/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The graduate you are trying to edit does not exist.');
    } 

    /*
     * Deleting graduate
     */
    function remove($id)
    {
        $graduate = $this->Graduate_model->get_graduate($id);

        // check if the graduate exists before trying to delete it
        if(isset($graduate['id']))
        {
            $this->Graduate_model->delete_graduate($id);
            redirect('graduate/index');
        }
        else
            show_error('The graduate you are trying to delete does not exist.');
    }
    
}
